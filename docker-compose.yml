# Create a docker compose for a postgres database
version: "3.7"

services:
  postgres:
    image: postgres:12.2
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    volumes:
      - ./database/postgres:/var/lib/postgresql/data

  react:
    # image: node:18.13.0
    # container_name: react
    # restart: always
    # ports:
    #   - 3000:3000
    # volumes:
    #   - ./client/src:/usr/src/app/src
    #   - ./client/public:/usr/src/app/public
    #   - ./client/node_modules:/usr/src/app/node_modules
    #   - ./client/package.json:/usr/src/app/package.json
    #   - ./client/package-lock.json:/usr/src/app/package-lock.json
    # working_dir: /usr/src/app
    # command: bash -c "npm install && npm start"
    image: ticketopia/react:latest
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: react
    restart: always
    ports:
      - 3000:3000

  express:
    image: ticketopia/express:latest
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: express
    restart: always
    ports:
      - 5001:5001
